openapi: 3.0.3
info:
  title: Ticket Reservation
  description: Api Spec For Ticket Reservation REST API
  version: 1.0.0
servers:
  - url: https://localhost:3000
paths:
# TODO: Admin Login & Register
  /v1/admin/login:
    post:
      summary: Login Admin
      description: Login Admin
      tags:
        - Admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminLoginRequest'
      responses:
        '200':
          description: Admin logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/AdminLoginResponse'
        '401':
          description: Invalid Username or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  message:
                    type: string
  /v1/admin/register:
    post:
      summary: Register Admin
      description: Register Admin
      tags:
        - Admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRegisterRequest'
      responses:
        '200':
          description: Admin registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/AdminRegisterResponse'

# TODO: User Login & Register
  /v1/user/login:
    post:
      summary: Login User
      description: Login User
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginResponse'
  /v1/user/register:
    post:
      summary: Register User
      description: Register User
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterRequest'
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                      email:
                        type: string
                      no_phone:
                        type: string
                      password:
                        type: string
                      profile_picture:
                        type: string

# TODO: Tourist Attraction Type
  ## All user Authorize
  /v1/tourist-attraction-type:
    get:
      summary: Get All Tourist Attraction Type
      description: Get All Tourist Attraction Type
      tags:
        - Tourist Attraction Type
      responses:
        '200':
          description: Tourist Attraction Type fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TouristAttractionTypeResponse'
  /v1/tourist-attraction-type/{touristAttractionTypeID}:
    get:
      summary: Get Tourist Attraction Type By ID
      description: Get Tourist Attraction Type By ID
      tags:
        - Tourist Attraction Type
      parameters:
        - name: touristAttractionTypeID
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Tourist Attraction Type fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/TouristAttractionTypeResponse'

  ## Admin Authorize
  /v1/admin/tourist-attraction-type:
    post:
      summary: Create Tourist Attraction Type
      description: Create Tourist Attraction Type
      tags:
        - Tourist Attraction Type
      security:
        - adminBearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Tourist Attraction Type created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/TouristAttractionTypeResponse'
  /v1/admin/tourist-attraction-type/{touristAttractionTypeID}:
    put:
      summary: Update Tourist Attraction Type
      description: Update Tourist Attraction Type
      tags:
        - Tourist Attraction Type
      security:
        - adminBearerAuth: [ ]
      parameters:
        - name: touristAttractionTypeID
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Tourist Attraction Type updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/TouristAttractionTypeResponse'
    delete:
      summary: Delete Tourist Attraction Type
      description: Delete Tourist Attraction Type
      tags:
        - Tourist Attraction Type
      security:
        - adminBearerAuth: [ ]
      parameters:
        - name: touristAttractionTypeID
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Tourist Attraction Type deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  message:
                    type: string

# TODO: Tourist Attraction
  ## Admin Authorize
  /v1/admin/tourist-attraction:
    post:
      summary: Create Tourist Attraction
      description: Create Tourist Attraction
      tags:
        - Tourist Attraction
      security:
        - adminBearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TouristAttractionRequest'
      responses:
        '200':
          description: Tourist Attraction created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/TouristAttractionResponse'
  /v1/admin/tourist-attraction/{touristAttractionID}:
    put:
      summary: Update Tourist Attraction
      description: Update Tourist Attraction
      tags:
        - Tourist Attraction
      security:
        - adminBearerAuth: [ ]
      parameters:
        - name: touristAttractionID
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TouristAttractionRequest'
      responses:
        '200':
          description: Tourist Attraction updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  message:
                    type: string

  ## All user Authorize
  /v1/tourist-attraction/{touristAttractionID}:
    get:
      summary: Get Tourist Attraction By ID
      description: Get Tourist Attraction By ID
      tags:
        - Tourist Attraction
      parameters:
        - name: touristAttractionID
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Tourist Attraction fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/TouristAttractionResponse'
  /v1/tourist-attraction:
    get:
      summary: Get All Tourist Attraction
      description: Get All Tourist Attraction
      tags:
        - Tourist Attraction
      responses:
        '200':
          description: Tourist Attraction fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TouristAttractionResponse'

# TODO: Ticket
  ## Admin Authorize
  /v1/admin/tourist-attraction/{touristAttractionID}/tickets:
    get:
      summary: Get All Ticket By Tourist Attraction ID
      description: Get All Ticket By Tourist Attraction ID
      tags:
        - Ticket
      security:
        - adminBearerAuth: [ ]
      parameters:
        - name: touristAttractionID
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Ticket fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TicketResponse'
  /v1/admin/ticket/{ticketID}:
    get:
      summary: Get Ticket By ID
      description: Get Ticket By ID
      tags:
        - Ticket
      security:
        - adminBearerAuth: [ ]
      parameters:
        - name: ticketID
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Ticket fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/TicketResponse'

  ## User Authorize
  /v1/user/tickets:
    get:
      summary: Get All Ticket By User ID
      description: Get All Ticket By User ID
      tags:
        - Ticket
      security:
        - userBearerAuth: [ ]
      responses:
        '200':
          description: Ticket fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/TicketByUserIDResponse'
  /v1/user/ticket/{ticketID}:
    get:
      summary: Get Ticket By ID
      description: Get Ticket By ID
      tags:
        - Ticket
      security:
        - userBearerAuth: [ ]
      parameters:
        - name: ticketID
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Ticket fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/TicketResponse'

# TODO: Transaction
    ## User Authorize
  /v1/user/transaction/initialize:
    post:
      summary: Initialize Transaction
      description: Initialize Transaction
      tags:
        - Transaction
      security:
        - userBearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionInitializeRequest'
      responses:
        '200':
          description: Transaction initialized successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/TransactionInitializeResponse'
  /v1/user/transactions:
    get:
      summary: Get All Transaction By User ID
      description: Get All Transaction By User ID
      tags:
        - Transaction
      security:
        - userBearerAuth: [ ]
      responses:
        '200':
          description: Transaction fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/TransactionByUserID'
  /v1/user/transaction/{transactionID}:
    get:
      summary: Get Transaction By ID
      description: Get Transaction By ID
      tags:
        - Transaction
      security:
        - userBearerAuth: [ ]
      parameters:
        - name: transactionID
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Transaction fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/TransactionResponse'
  /v1/chatbot:
    get:
      summary: ChatBot
      description: ChatBot
      tags:
        - Websocket
      responses:
        '200':
          description: Chatbot
          content:
            text/plain:
              schema:
                type: string
                example: ini adalah contoh responsenya

components:
  schemas:
    UserLoginResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        token:
          type: string
    UserRegisterResponse:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        no_phone:
          type: string
        profile_picture:
          type: string
          format: binary
    UserResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        no_phone:
          type: string
        profile_picture:
          type: string
    AdminRegisterResponse:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
    AdminLoginResponse:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          format: password
          minLength: 6
        token:
          type: string
    TouristAttractionTypeResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    TouristAttractionResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        tourist_attraction_type:
          $ref: '#/components/schemas/TouristAttractionTypeResponse'
        location:
          type: string
        price:
          type: integer
        image:
          type: string
        balance:
          type: integer
    TransactionInitializeResponse:
      type: object
      properties:
        id:
          type: integer
        amount:
          type: integer
        status:
          type: integer
        snap_url:
          type: string
    TicketResponse:
      type: object
      properties:
        id:
          type: integer
        tourist_attraction:
          $ref: '#/components/schemas/TouristAttractionResponse'
        ReservationDate:
          type: string
    TicketByUserIDResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        no_phone:
          type: string
        profile_picture:
          type: string
        tickets:
          type: array
          items:
            $ref: '#/components/schemas/TicketResponse'
    TransactionResponse:
      type: object
      properties:
        id:
          type: integer
        tourist_attraction:
          $ref: '#/components/schemas/TouristAttractionResponse'
        qty:
          type: integer
        reservation_date:
          type: string
        amount:
          type: integer
    TransactionByUserID:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        no_phone:
          type: string
        profile_picture:
          type: string
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionResponse'
    AdminLoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          format: password
          minLength: 6
    AdminRegisterRequest:
      type: object
      properties:
        name:
          type: string
        username:
          type: string
        password:
          type: string
          format: password
          minLength: 6
        tourist_attraction_id:
          type: integer
    UserLoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
          minLength: 6
    UserRegisterRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        no_phone:
          type: string
        password:
          type: string
          format: password
          minLength: 6
        profile_picture:
          type: string
    TouristAttractionRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        tourist_attraction_type_id:
          type: integer
        location:
          type: string
        price:
          type: integer
        image:
          type: string
    TransactionInitializeRequest:
      type: object
      properties:
        user_id:
          type: integer
        tourist_attraction_id:
          type: integer
        quantity:
          type: integer
        ReservationDate:
          type: string
  securitySchemes:
    adminBearerAuth:
      type: apiKey
      in: header
      name: X-Api-Key
      description: Admin Bearer Auth
    userBearerAuth:
        type: apiKey
        in: header
        name: X-Api-Key
        description: User Bearer Auth